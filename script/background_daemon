#!/usr/bin/env ruby
require 'rubygems'
require 'daemons'
require 'fileutils'

root_dir = File.expand_path('../', File.dirname(__FILE__))
pid_dir = root_dir + '/tmp/pids'
log_dir = root_dir + '/log'
FileUtils.mkdir_p(pid_dir)
FileUtils.mkdir_p(log_dir)

def exception_to_str(e)
  e.message + "\n" + e.backtrace.join("\n        from ")
end

# for some reason, log_output doesn't seem to work. Oh well..
Daemons.run_proc('background_daemon', dir_mode: :normal, dir: pid_dir, log_dir: log_dir, log_output: false) do
  Dir.chdir root_dir
  require root_dir + '/config/environment'
  Rails.logger.auto_flushing = true if Rails.logger.respond_to? :auto_flushing=

  # Tasks may be longrunning so we want each one in a thread so one task won't
  # block other ones.
  threads = BackgroundTaskRegistry.all_tasks.map do |task|
    Thread.new do
      loop do
        begin
          task.run
        rescue StandardError => e
          Rails.logger.error "#{task.class.name} exception: " + exception_to_str(e)

          begin
            ActiveRecord::Base.clear_active_connections!
          rescue StandardError => e2
            Rails.logger.error 'Failed to get rid of used db connections: ' + exception_to_str(e2)
          end
        end
        sleep task.wait_delay
      end
    end
  end
  # TODO: we may not detect if only one of the threads dies.
  threads.each(&:join)
end
